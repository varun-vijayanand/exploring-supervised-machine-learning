# -*- coding: utf-8 -*-
"""TASK 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CnFwb3U67SKf8B6Pnwoet-U1TywD6s3x
"""

from sklearn.datasets import load_iris

iris = load_iris()

print(iris.keys())

#Labels
print(iris['target'].shape)
Y = iris['target']

#Features
print(iris['data'].shape)
X = iris['data']

print(iris['feature_names'])
print(iris['target_names'])

X

import numpy as np
a = np.array([[3,5,6,8] , [4,8,4,2] , [3,6,8,9]])
a

a[:,2:4]

#Slicing of numpy array containg features
X = X[ : , 2:4]

import pandas as pd
Yc = pd.DataFrame(Y)[0].map({0:'r' , 1:'g' , 2:'b'})

Yc

X

"""**Seperate Training and testing sets**"""

from sklearn.model_selection import train_test_split
xtr,xts,ytr,yts = train_test_split(X,Y,test_size = 0.3,random_state=6)

import pandas as pd
print(pd.DataFrame(ytr)[0].value_counts())
print(pd.DataFrame(yts)[0].value_counts())

print(xtr.shape)
print(xts.shape)
print(ytr.shape)
print(yts.shape)

"""**Defining Algorithm For training the model**"""

#1.3,1.4,3.2,3.5 --- ??? S/Vr/Vg
from sklearn.neighbors import KNeighborsClassifier
kmodel = KNeighborsClassifier(n_neighbors=5)

"""**Training the Model using Data and Algorithm Defined**"""

#.fit() - A function to train our model
kmodel.fit(xtr,ytr)

"""**Evaluation of model**"""

#Training Accuracy
ytr_pred = kmodel.predict(xtr)
print((ytr_pred == ytr).sum()/len(xtr))
print(kmodel.score(xtr,ytr))

#Testing Accuracy
yts_pred = kmodel.predict(xts)
print((yts_pred == yts).sum()/len(xts))
print(kmodel.score(xts,yts))

"""**Parameter Tuning**"""

acc_tr = []
acc_ts = []
for i in range(1,15):
  kmd = KNeighborsClassifier(n_neighbors=i)

  kmd.fit(xtr,ytr)

  acc_tr.append(kmd.score(xtr,ytr))
  acc_ts.append(kmd.score(xts,yts))

"""**Make the Predictions**"""

xtr.shape

#.predict() - To predict the output over unknown features
#[1.2,3.1,2.1,3.3]
kmodel.predict([[2.1,3.3] , [4.5,6.2]])

